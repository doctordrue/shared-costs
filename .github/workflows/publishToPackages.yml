name: Create and publish a Docker image

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.1.5
        
      - name: Get version from gradle
        uses: thecodemonkey/action-get-gradle-version@master
        id: version
      
      - name: Print version from gradle
        run: 'echo version ${{ steps.version.outputs.version }}'
        
      - name: Print version from GitHub release
        run: 'echo version ${{ github.event.release.tag_name }}'
        
      - name: Prepare image tag from Gradle project version
        if: github.event_name == 'workflow_dispatch'
        run: echo ::set-output name=IMAGE_TAG::${{ steps.version.outputs.version }}
      
      - name: Prepare image tag from GitHub Release
        if: github.event_name == 'release'
        run: echo ::set-output name=IMAGE_TAG::${{ github.event.release.tag_name }}
          
      - name: Print tag
        run: echo "Tag is $IMAGE_TAG"
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
       
      - name: Execute Gradle build
        run: ./gradlew bootBuildImage --imageName=${{ env.IMAGE_NAME }}

      - name: Push Docker image to github containers repo
        run: |
          docker image tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      - name: Push Docker image to Docker Hub
        run: | 
          docker image tag ${{ env.IMAGE_NAME }} docker.io/${{ env.IMAGE_NAME }}:${{ IMAGE_TAG }}
          docker push docker.io/${{ env.IMAGE_NAME }}
